import { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';
import { UserEntity } from '../user/user.entity';
import { BaseEntity } from '../../database/base.entity';
import { ProviderEntity } from './provider.entity';
import { ApiProperty } from '@nestjs/swagger';

@Entity({ name: 'verifications' })
export class VerificationEntity extends BaseEntity {
  @ApiProperty({
    description: 'Unique session identifier generated by reclaim sdk',
  })
  @Column({ type: 'varchar' })
  public sessionId: string;

  @ApiProperty({
    description: 'Indicates if the requested proof has been verified',
  })
  @Column({ type: 'boolean', default: false })
  public verified: boolean;

  @ApiProperty({ description: 'Number of successful verified proof' })
  @Column({ type: 'int' })
  public count: number;

  @ApiProperty({ description: 'User associated with this reclaim proof' })
  @ManyToOne(() => UserEntity, (user) => user.verifications)
  public user: UserEntity;

  @ApiProperty({ description: 'Provider associated with this reclaim proof' })
  @ManyToOne(() => ProviderEntity)
  @JoinColumn({ name: 'providerId' })
  public provider: ProviderEntity;
}
